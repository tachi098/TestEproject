// <auto-generated />
using System;
using DemoProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DemoProject.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DemoProject.Entities.Order", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<int>("userid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("userid");

                    b.ToTable("Order");

                    b.HasData(
                        new
                        {
                            id = 1,
                            address = "binh thanh",
                            email = "toilahuy098@gmail.com",
                            name = "huy",
                            phone = "0933691822",
                            status = true,
                            userid = 1
                        },
                        new
                        {
                            id = 2,
                            address = "binh thanh",
                            email = "toilahuy098@gmail.com",
                            name = "huy",
                            phone = "0933691822",
                            status = true,
                            userid = 1
                        });
                });

            modelBuilder.Entity("DemoProject.Entities.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("create_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("level")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("update_at")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            id = 1,
                            address = "binh thanh",
                            avatar = "image/p1.png",
                            create_at = new DateTime(2020, 12, 15, 10, 55, 6, 784, DateTimeKind.Local).AddTicks(8878),
                            email = "toilahuy098@gmail.com",
                            level = true,
                            name = "huy",
                            password = "123456",
                            phone = "0933691822",
                            status = true,
                            update_at = new DateTime(2020, 12, 15, 10, 55, 6, 785, DateTimeKind.Local).AddTicks(6640)
                        },
                        new
                        {
                            id = 2,
                            address = "quan 3",
                            avatar = "image/p2.png",
                            create_at = new DateTime(2020, 12, 15, 10, 55, 6, 785, DateTimeKind.Local).AddTicks(7780),
                            email = "thaochi098@gmail.com",
                            level = false,
                            name = "chi",
                            password = "123456",
                            phone = "0933691822",
                            status = true,
                            update_at = new DateTime(2020, 12, 15, 10, 55, 6, 785, DateTimeKind.Local).AddTicks(7797)
                        });
                });

            modelBuilder.Entity("DemoProject.Entities.Order", b =>
                {
                    b.HasOne("DemoProject.Entities.User", null)
                        .WithMany("Orders")
                        .HasForeignKey("userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
